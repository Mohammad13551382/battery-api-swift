//
// PurchasesPurchasesInnerRefundInformation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PurchasesPurchasesInnerRefundInformation: Codable, JSONEncodable, Hashable {

    public var fullyRefunded: Bool
    public var partiallyRefunded: Bool
    public var pendingRefund: Bool
    public var refunded: PurchasesPurchasesInnerRefundInformationRefunded?
    public var refundable: PurchasesPurchasesInnerRefundInformationRefunded?

    public init(fullyRefunded: Bool, partiallyRefunded: Bool, pendingRefund: Bool, refunded: PurchasesPurchasesInnerRefundInformationRefunded? = nil, refundable: PurchasesPurchasesInnerRefundInformationRefunded? = nil) {
        self.fullyRefunded = fullyRefunded
        self.partiallyRefunded = partiallyRefunded
        self.pendingRefund = pendingRefund
        self.refunded = refunded
        self.refundable = refundable
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case fullyRefunded = "fully_refunded"
        case partiallyRefunded = "partially_refunded"
        case pendingRefund = "pending_refund"
        case refunded
        case refundable
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(fullyRefunded, forKey: .fullyRefunded)
        try container.encode(partiallyRefunded, forKey: .partiallyRefunded)
        try container.encode(pendingRefund, forKey: .pendingRefund)
        try container.encodeIfPresent(refunded, forKey: .refunded)
        try container.encodeIfPresent(refundable, forKey: .refundable)
    }
}

