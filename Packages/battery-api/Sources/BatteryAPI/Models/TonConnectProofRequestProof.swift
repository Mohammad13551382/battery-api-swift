//
// TonConnectProofRequestProof.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct TonConnectProofRequestProof: Codable, JSONEncodable, Hashable {

    public var timestamp: Int64
    public var domain: TonConnectProofRequestProofDomain
    public var signature: String
    public var payload: String
    public var stateInit: String?

    public init(timestamp: Int64, domain: TonConnectProofRequestProofDomain, signature: String, payload: String, stateInit: String? = nil) {
        self.timestamp = timestamp
        self.domain = domain
        self.signature = signature
        self.payload = payload
        self.stateInit = stateInit
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case timestamp
        case domain
        case signature
        case payload
        case stateInit = "state_init"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(timestamp, forKey: .timestamp)
        try container.encode(domain, forKey: .domain)
        try container.encode(signature, forKey: .signature)
        try container.encode(payload, forKey: .payload)
        try container.encodeIfPresent(stateInit, forKey: .stateInit)
    }
}

